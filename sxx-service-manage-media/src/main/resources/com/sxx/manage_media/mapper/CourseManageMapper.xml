<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxx.manage_media.mapper.CourseManageMapper">

    <select id="queryList" parameterType="java.lang.String" resultType="com.sxx.framework.domain.course.Course">
        select *
        from course c
        <if test="courseTitle != null and courseTitle != '' and courseTitle != 'undefined'">
            where
            c.course_title LIKE CONCAT(CONCAT('%',#{courseTitle},'%'))
        </if>
        ORDER BY
        c.course_public_time DESC
    </select>

    <resultMap id="teachplanMap" type="com.sxx.framework.domain.course.ext.TeachplanNode">
        <id column="one_id" property="id"/>
        <result column="one_name" property="pName"/>
        <collection property="children" ofType="com.sxx.framework.domain.course.ext.TeachplanNode">
            <id column="two_id" property="id"/>
            <result column="two_name" property="pName"/>
            <collection property="children" ofType="com.sxx.framework.domain.course.ext.TeachplanNode">
                <id column="three_id" property="id"/>
                <result column="three_name" property="pName"/>
            </collection>
        </collection>

    </resultMap>
    <select id="findTeachplanList" parameterType="java.lang.String" resultMap="teachplanMap">
        SELECT
        a.id one_id,
        a.p_name one_name,
        b.id two_id,
        b.p_name two_name,
        c.id three_id,
        c.p_name three_name
        FROM
        teachplan a
        LEFT JOIN teachplan b ON a.id = b.parent_id
        LEFT JOIN teachplan c ON b.id = c.parent_id
        WHERE
        a.parent_id = '0'
        AND a.course_id = #{courseId}
        ORDER BY
        a.order_by,
        b.order_by,
        c.order_by

    </select>

    <insert id="addCourse" parameterType="com.sxx.framework.domain.course.Course">
        <selectKey keyProperty="courseId" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into course values
        (#{courseId},#{courseTitle},#{courseSubTitle},#{courseImage},#{courseImageKey},#{courseTeacher}
        ,#{courseTeacherImage},#{courseTeacherImageKey},#{courseTeacherIntroduce},#{courseWatchCount},#{coursePreferentialTime},#{courseActivityPrice}
        ,#{courseOriginalPrice},#{coursePublicTime},#{courseUpdateTime},#{courseIntroduce},#{introduce})
    </insert>

    <update id="updateCourse" parameterType="com.sxx.framework.domain.course.Course">
        update course
        <trim prefix="set" suffixOverrides=",">
            <if test="courseTitle!=null">course_title=#{courseTitle},</if>
            <if test="courseSubTitle!=null">course_sub_title=#{courseSubTitle},</if>
            <if test="courseImage!=null">course_image=#{courseImage},</if>
            <if test="courseTeacher!=null">course_teacher=#{courseTeacher},</if>
            <if test="courseTeacherImage!=null">course_teacher_image=#{courseTeacherImage},</if>
            <if test="courseTeacherIntroduce!=null">course_teacher_introduce=#{courseTeacherIntroduce},</if>
            <if test="courseWatchCount!=null">course_watch_count=#{courseWatchCount},</if>
            <if test="coursePreferentialTime!=null">course_preferential_time=#{coursePreferentialTime},</if>
            <if test="courseActivityPrice!=null">course_activity_price=#{courseActivityPrice},</if>
            <if test="courseOriginalPrice!=null">course_original_price=#{courseOriginalPrice},</if>
            <if test="courseUpdateTime!=null">course_update_time=#{courseUpdateTime},</if>
            <if test="courseIntroduce!=null">course_introduce=#{courseIntroduce},</if>
            <if test="introduce!=null">introduce=#{introduce},</if>
        </trim>
        WHERE course_id=#{courseId}
    </update>
</mapper>